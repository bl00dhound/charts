{
	"info": {
		"_postman_id": "edcea762-0122-423b-b83b-b7df5fab8532",
		"name": "Otus architect",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [{
			"name": "01 User1 register",
			"event": [{
					"listen": "test",
					"script": {
						"id": "56c44485-3879-4013-ae3c-5d8fa328f66c",
						"exec": [
							"const body = JSON.parse(responseBody);",
							"pm.collectionVariables.set(\"id1\", body.id);",
							"",
							"pm.test(\"Check is create successful\", function () {",
							"    const jwt = pm.response.headers.get('Set-Cookie').split('=')[1].split(';')[0];",
							"    pm.collectionVariables.set('jwt1', jwt);",
							"",
							"",
							"    var body = pm.response.json();",
							"    pm.expect(body).to.have.property('firstName', pm.collectionVariables.get('firstName1'));",
							"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName1'));",
							"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email1'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "806cd3bb-01de-4434-bf64-9d59e374747a",
						"exec": [
							"pm.collectionVariables.set(\"password1\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email1\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"firstName1\", pm.variables.replaceIn('{{$randomFirstName}}_more'))",
							"pm.collectionVariables.set(\"lastName1\", pm.variables.replaceIn('{{$randomLastName}}_more'))",
							"pm.collectionVariables.set(\"phone1\", pm.variables.replaceIn('+380987867878'))"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"user-agent": true
				}
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "",
						"type": "string"
					}]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName1}}\",\n    \"lastName\": \"{{lastName1}}\",\n    \"email\": \"{{email1}}\",\n    \"phone\": \"{{phone1}}\",\n    \"password\": \"{{password1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				},
				"description": "User1 register"
			},
			"response": []
		},
		{
			"name": "02 Can't get user1 without login",
			"event": [{
				"listen": "test",
				"script": {
					"id": "d423ef10-bd4e-45e1-aaf1-5d092a065caf",
					"exec": [
						"pm.test(\"Status code is 403\", function () {",
						"    pm.response.to.have.status(403);",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "03 User1 login",
			"event": [{
				"listen": "test",
				"script": {
					"id": "93b7f4f0-2414-46e4-bd9e-ce75ea76d880",
					"exec": [
						"const body = JSON.parse(responseBody);",
						"",
						"pm.test(\"Login is successful\", function () {",
						"    var body = pm.response.json();",
						"    const jwt = pm.response.headers.get('Set-Cookie').split('=')[1].split(';')[0];",
						"    pm.collectionVariables.set('jwt1', jwt);",
						"",
						"    pm.response.to.have.status(200);",
						"    pm.expect(pm.response.headers.get('Set-Cookie')).to.be.a('string')",
						"    pm.expect(body).to.have.property('firstName', pm.collectionVariables.get('firstName1'));",
						"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName1'));",
						"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email1'));",
						"});",
						""
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email1}}\",\n    \"password\": \"{{password1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "04 User1 edit",
			"event": [{
				"listen": "test",
				"script": {
					"id": "ec49ee73-e073-4420-ae29-584a0606e0d2",
					"exec": [
						"const body = JSON.parse(responseBody);",
						"",
						"pm.test(\"Check is update successful\", function () {",
						"    var body = pm.response.json();",
						"    pm.expect(body).to.have.property('firstName', 'new_' + pm.collectionVariables.get('firstName1'));",
						"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName1'));",
						"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email1'));",
						"    pm.expect(body).to.have.property('id', pm.collectionVariables.get('id1'));",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "{{jwt1}}",
						"type": "string"
					}]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"new_{{firstName1}}\",\n    \"lastName\": \"{{lastName1}}\",\n    \"email\": \"{{email1}}\",\n    \"phone\": \"{{phone1}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "05 Get user with updated data",
			"event": [{
				"listen": "test",
				"script": {
					"id": "8fd48553-e6da-4f28-a46b-1f8ed1b61565",
					"exec": [
						"const body = JSON.parse(responseBody);",
						"",
						"pm.test(\"Check is update successful\", function () {",
						"    var body = pm.response.json();",
						"    pm.expect(body).to.have.property('firstName', 'new_' + pm.collectionVariables.get('firstName1'));",
						"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName1'));",
						"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email1'));",
						"    pm.expect(body).to.have.property('id', pm.collectionVariables.get('id1'));",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "{{jwt1}}",
						"type": "string"
					}]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "06 Logout User1",
			"event": [{
				"listen": "test",
				"script": {
					"id": "e89aea68-e3b5-41d9-96b7-d1bdc6e904f3",
					"exec": [
						"pm.test(\"Status code is 200\", function () {",
						"    pm.response.to.have.status(200);",
						"});",
						"",
						"",
						"pm.test(\"should remove cookie\", function () {",
						"    const jwt = pm.response.headers.get('Set-Cookie').split('=')[1].split(';')[0];",
						"    pm.expect(jwt).to.have.lengthOf(0)",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "{{jwt1}}",
						"type": "string"
					}]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/logout",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "07 User2 register",
			"event": [{
					"listen": "prerequest",
					"script": {
						"id": "192d0462-cdac-47ae-af07-6238b316380b",
						"exec": [
							"pm.collectionVariables.set(\"password2\", pm.variables.replaceIn('{{$randomPassword}}'))",
							"pm.collectionVariables.set(\"email2\", pm.variables.replaceIn('{{$randomEmail}}'))",
							"pm.collectionVariables.set(\"firstName2\", pm.variables.replaceIn('{{$randomFirstName}}_more'))",
							"pm.collectionVariables.set(\"lastName2\", pm.variables.replaceIn('{{$randomLastName}}_more'))",
							"pm.collectionVariables.set(\"phone2\", pm.variables.replaceIn('+380987864478'))"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5bf3ad1c-ef4b-413a-97c2-88ae32d91368",
						"exec": [
							"const body = JSON.parse(responseBody);",
							"pm.collectionVariables.set(\"id2\", body.id);",
							"",
							"pm.test(\"Check is create successful\", function () {",
							"    const jwt = pm.response.headers.get('Set-Cookie').split('=')[1].split(';')[0];",
							"    pm.collectionVariables.set('jwt2', jwt);",
							"",
							"",
							"    var body = pm.response.json();",
							"    pm.expect(body).to.have.property('firstName', pm.collectionVariables.get('firstName2'));",
							"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName2'));",
							"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email2'));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName2}}\",\n    \"lastName\": \"{{lastName2}}\",\n    \"email\": \"{{email2}}\",\n    \"phone\": \"{{phone2}}\",\n    \"password\": \"{{password2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "08 User2 login",
			"event": [{
				"listen": "test",
				"script": {
					"id": "48efec2a-337b-48bf-8736-769fe93a2b05",
					"exec": [
						"const body = JSON.parse(responseBody);",
						"",
						"pm.test(\"Login is successful\", function () {",
						"    var body = pm.response.json();",
						"    const jwt = pm.response.headers.get('Set-Cookie').split('=')[1].split(';')[0];",
						"    pm.collectionVariables.set('jwt2', jwt);",
						"",
						"    pm.response.to.have.status(200);",
						"    pm.expect(pm.response.headers.get('Set-Cookie')).to.be.a('string')",
						"    pm.expect(body).to.have.property('firstName', pm.collectionVariables.get('firstName2'));",
						"    pm.expect(body).to.have.property('lastName', pm.collectionVariables.get('lastName2'));",
						"    pm.expect(body).to.have.property('email', pm.collectionVariables.get('email2'));",
						"});",
						""
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{email2}}\",\n    \"password\": \"{{password2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "09 Get User1 by User2",
			"event": [{
				"listen": "test",
				"script": {
					"id": "42e109cc-ade6-4b23-bc2a-ba51a3d19b52",
					"exec": [
						"pm.test(\"Status code is 403\", function () {",
						"    pm.response.to.have.status(403);",
						"});",
						"",
						"pm.test(\"Body matches string\", function () {",
						"    pm.expect(pm.response.text()).to.include(\"Forbidden\");",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "{{jwt2}}",
						"type": "string"
					}]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/users/{{id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "10 Update User1 by User2",
			"event": [{
				"listen": "test",
				"script": {
					"id": "5f18852a-8f9a-45d3-9ae8-e556e52f3987",
					"exec": [
						"pm.test(\"Status code is 403\", function () {",
						"    pm.response.to.have.status(403);",
						"});",
						"",
						"pm.test(\"Body matches string\", function () {",
						"    pm.expect(pm.response.text()).to.include(\"Forbidden\");",
						"});"
					],
					"type": "text/javascript"
				}
			}],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [{
						"key": "token",
						"value": "{{jwt2}}",
						"type": "string"
					}]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\": \"{{firstName2}}\",\n    \"lastName\": \"{{lastName2}}\",\n    \"email\": \"{{email2}}\",\n    \"phone\": \"{{phone2}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/users/{{id1}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"{{id1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [{
			"listen": "prerequest",
			"script": {
				"id": "1e73a107-0066-4e82-a2de-512fce8f9eb9",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "df379565-198b-4e3c-910b-2e161d8f9c75",
				"type": "text/javascript",
				"exec": [
					"tests[\"[INFO] Request: \" + (('data' in request) ? (Object.keys(request.data).length ? request.data : '{}') : '') ] = true;",
					"tests[\"[INFO] Response: \" + responseBody] = true;"
				]
			}
		}
	],
	"variable": [{
			"id": "77fe6e23-5089-4562-97cf-865904fe664d",
			"key": "userId",
			"value": 40,
			"disabled": true
		},
		{
			"id": "c7fe7e6a-7cd3-4585-860e-ce392a5d17b8",
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"id": "4d808e72-a805-46b0-89ed-feef30295f42",
			"key": "firstName1",
			"value": "Isidro_more"
		},
		{
			"id": "d3a3dac5-5016-402c-a0ec-c39d585bde06",
			"key": "lastName1",
			"value": "Bartoletti_more"
		},
		{
			"id": "43b851c1-7935-43ab-aa5b-48dcd3b760e6",
			"key": "phone1",
			"value": "+380987867878"
		},
		{
			"id": "a95c7c8b-eef7-4a83-b1cd-31cb26913ec6",
			"key": "email1",
			"value": "Vita_Hermiston@yahoo.com"
		},
		{
			"id": "d78b4c21-ac09-4ec2-93a2-b10b5a6e2770",
			"key": "password1",
			"value": "fztmesNuHNbsXAZ"
		},
		{
			"id": "3748be44-709b-4975-8753-825cc83104ce",
			"key": "id1",
			"value": 60
		},
		{
			"id": "968cb16b-ee4c-4989-836a-b00d0798597e",
			"key": "jwt1",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTc5Nzk0NjUsImRhdGEiOnsiaWQiOjYwLCJlbWFpbCI6IlZpdGFfSGVybWlzdG9uQHlhaG9vLmNvbSJ9LCJpYXQiOjE1OTc4OTMwNjV9.CqaISrhSuaTBrS5BT-ZZ1yflAkSNDiAbDhU00D90Hog"
		},
		{
			"id": "07b5577d-bc09-4648-8ab2-e0fbf714c997",
			"key": "firstName2",
			"value": "Paige_more"
		},
		{
			"id": "41baf30a-e8da-49b1-ab13-0900b5033166",
			"key": "lastName2",
			"value": "Swaniawski_more"
		},
		{
			"id": "c281e184-d519-4466-bb78-4375d67b7f9c",
			"key": "phone2",
			"value": "+380987864478"
		},
		{
			"id": "3d946abd-a34e-46af-9ec7-3d8e0eefaf70",
			"key": "email2",
			"value": "Agnes66@hotmail.com"
		},
		{
			"id": "7bc6003e-f638-470a-af1e-dc7b213512fc",
			"key": "password2",
			"value": "FSifdJAJFhfEnTR"
		},
		{
			"id": "46385c4a-7792-45fb-8cd7-f732f942282a",
			"key": "id2",
			"value": 62
		},
		{
			"id": "14ce095d-7ea4-4eba-92c4-51ea23bc9f90",
			"key": "jwt2",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1OTc5Nzk3NjgsImRhdGEiOnsiaWQiOjYyLCJlbWFpbCI6IkFnbmVzNjZAaG90bWFpbC5jb20ifSwiaWF0IjoxNTk3ODkzMzY4fQ.2F868398FM97_USYv8qGezvXD_0ZPM80JYv7SoHYqU0"
		}
	],
	"protocolProfileBehavior": {}
}